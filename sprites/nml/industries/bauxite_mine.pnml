/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) bauxite_mine ## __VA_ARGS__

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_1), 2022, 2039, 12)

spritelayout THIS_ID(spritelayout_2) {
	ground {
		sprite: 2022;
	}
	FENCE_NE
	FENCE_NW
	FENCE_SE
	FENCE_SW
}

spritelayout THIS_ID(spritelayout_3) {
	ground {
		sprite: 2022;
	}
	building {
		sprite: 2030;
		xoffset: 2;
		yoffset: 3;
		xextent: 13;
		yextent: 12;
		zextent: 12;
	}
	FENCE_NE
	FENCE_NW
	FENCE_SE
	FENCE_SW
}

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_4), 2022, 2036, 12)
SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_5), 2022, 2033, 12)

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_1);
	relative_coord(2, 0): THIS_ID(spritelayout_5);
	relative_coord(3, 0): THIS_ID(spritelayout_1);
	relative_coord(0, 1): THIS_ID(spritelayout_1);
	relative_coord(2, 1): THIS_ID(spritelayout_3);
	relative_coord(3, 1): THIS_ID(spritelayout_1);
	relative_coord(4, 1): THIS_ID(spritelayout_1);
	relative_coord(0, 2): THIS_ID(spritelayout_1);
	relative_coord(2, 2): THIS_ID(spritelayout_4);
	relative_coord(3, 2): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(tile_spritelayout), layout_num) {
	1: THIS_ID(layout_1);
	THIS_ID(spritelayout_1);
}

FENCES_EXCLUDE_BY_CLASS     ( THIS_ID(tile_fence_station),  THIS_ID(tile_spritelayout),   TILE_CLASS_STATION)
FENCES_EXCLUDE_SAME_INDUSTRY( THIS_ID(tile_fence_industry), THIS_ID(tile_fence_station))
ADD_FLAT_FENCES             ( THIS_ID(tile_fences),         THIS_ID(tile_fence_industry), 1, 1, 1, 1)

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (location_check, THIS_ID(nearby_industry))

item(FEAT_INDUSTRYTILES, THIS_ID(tile), TILE_BAUXITEMINE_1) {
	property {
		substitute:       0;
		accepted_cargos:  [[ENSP, 8]];
		land_shape_flags: 0;
	}
	graphics {
		tile_check:   THIS_ID(location_check);
		THIS_ID(tile_fences);
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_bauxite_mine_1 {
	0, 0: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	4, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	3, 2: THIS_ID(tile);
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

#define THIS_STR_EXTRA_SUPPLIES STR_EXTRA_ENGINEERING_SUPPLIES
/* availability years - also update available from strings if changing these */

CHECK_NEARBY_CLUSTER(bauxite_mine,    20, 60, 2, 3, return CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (aluminium_plant, 16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(bauxite_mine))
CHECK_FOUNDER       (THIS_ID(aluminium_plant))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_primary.pnml"
#include "../templates/check_primary_production_level.pnml"

#include "../templates/extra_text_primary.pnml"

#include "../templates/check_availability.pnml"


item(FEAT_INDUSTRIES, bauxite_mine, IND_BAUXITEMINE_ID) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_bauxite_mine_1
			];
		life_type:              IND_LIFE_TYPE_EXTRACTIVE;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_BAUXITE_MINE);
		nearby_station_name:    string(STR_STATION, string(STR_TOWN), string(STR_IND_BAUXITE_MINE));
		prod_cargo_types: [AORE];
		accept_cargo_types: [ENSP];
		prod_multiplier: [19, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 5;
		prospect_chance: 0.75;
		fund_cost_multiplier: 238;
		map_colour: 71;
		remove_cost_multiplier: 0;
		spec_flags:             0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		construction_probability:THIS_ID(check_availability);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		build_prod_change:       4;
		extra_text_industry:     THIS_ID(extra_text);
		extra_text_fund:         return string(STR_FUND_AVAILABLE_FROM, string(STR_FUND_AVAILABLE_FROM_DATE_BAUXITE_MINE));
		colour:                  THIS_ID(colour);
	}
}
#include "../templates/undefs.pnml"
