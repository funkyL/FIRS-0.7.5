/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) steelmill ## __VA_ARGS__

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_player_check,                                                            THIS_ID(tile_nearby_industry))
TILE_DISALLOW_SLOPES      (tile_location_check,                       CB_RESULT_LOCATION_DISALLOW, THIS_ID(tile_player_check))

item(FEAT_INDUSTRYTILES, THIS_ID(tile_1), 52) {
	property {
		substitute: 52;
		override: 52;
		accepted_cargos: [[IORE, 8], [SCMT, 8], [COAL, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_2), 53) {
	property {
		substitute: 53;
		override: 53;
		accepted_cargos: [[IORE, 8], [SCMT, 8], [COAL, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_3), 54) {
	property {
		substitute: 54;
		override: 54;
		accepted_cargos: [[IORE, 8], [SCMT, 8], [COAL, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_4), 55) {
	property {
		substitute: 55;
		override: 55;
		accepted_cargos: [[IORE, 8], [SCMT, 8], [COAL, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_5), 56) {
	property {
		substitute: 56;
		override: 56;
		accepted_cargos: [[IORE, 8], [SCMT, 8], [COAL, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_6), 57) {
	property {
		substitute: 57;
		override: 57;
		accepted_cargos: [[IORE, 8], [SCMT, 8], [COAL, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    2
#define THIS_PROD_RATIO_CARGO2    2
#define THIS_PROD_RATIO_CARGO3    4
#define THIS_BOOST_12             2
#define THIS_BOOST_13             2
#define THIS_BOOST_21             2
#define THIS_BOOST_23             2
#define THIS_BOOST_31             4
#define THIS_BOOST_32             4
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_STEELMILL
/* availability years - also update available from strings if changing these */


CHECK_INCOMPATIBLE  (steelmill,     56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (coal_mine,     16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(steelmill))
CHECK_INCOMPATIBLE  (iron_ore_mine, 16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(coal_mine))
CHECK_INCOMPATIBLE  (junkyard,      16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(iron_ore_mine))
CHECK_FOUNDER       (THIS_ID(junkyard))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, steelmill, IND_STEELMILL_ID) {
	property {
		substitute: 8;
		override: 8;
		accept_cargo_types: [IORE, COAL, SCMT];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 2;
		fund_cost_multiplier: 200;
		map_colour: 9;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		construction_probability:THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		extra_text_fund:         return string(STR_FUND_AVAILABLE_FROM, string(STR_FUND_AVAILABLE_FROM_DATE_STEELMILL));
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
