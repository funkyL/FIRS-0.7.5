/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) oil_refinery ## __VA_ARGS__

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_player_check,                                                            THIS_ID(tile_nearby_industry))
TILE_DISALLOW_SLOPES      (tile_location_check,                       CB_RESULT_LOCATION_DISALLOW, THIS_ID(tile_player_check))

item(FEAT_INDUSTRYTILES, THIS_ID(tile_1), 18) {
	property {
		substitute: 18;
		override: 18;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_2), 19) {
	property {
		substitute: 19;
		override: 19;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_3), 20) {
	property {
		substitute: 20;
		override: 20;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_4), 21) {
	property {
		substitute: 21;
		override: 21;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_5), 22) {
	property {
		substitute: 22;
		override: 22;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_6), 23) {
	property {
		substitute: 23;
		override: 23;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
	}
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    2
#define THIS_PROD_RATIO_CARGO1    6
#define THIS_PROD_RATIO_CARGO2    0
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             0
#define THIS_BOOST_13             0
#define THIS_BOOST_21             0
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_OIL_REFINERY
/* availability years - also update available from strings if changing these */

CHECK_INCOMPATIBLE  (oil_refinery,   56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (oil_wells,      16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(oil_refinery))
CHECK_INCOMPATIBLE  (oil_rig,        16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(oil_wells))
CHECK_FOUNDER       (THIS_ID(oil_rig))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, THIS_ID(), IND_OILREFINERY_ID) {
	property {
		substitute: 4;
		override: 4;
		prod_cargo_types: [RFPR, PETR];
		accept_cargo_types: [OIL_];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		conflicting_ind_types: [];
		prob_random: 4;
		prob_in_game: 2;
		fund_cost_multiplier: 200;
		map_colour: 191;
		spec_flags:           0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		construction_probability:THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		extra_text_fund:         return string(STR_FUND_AVAILABLE_FROM, string(STR_FUND_AVAILABLE_FROM_DATE_OILREFINERY));
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"

