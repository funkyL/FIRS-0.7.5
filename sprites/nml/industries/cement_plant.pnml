/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#include "../templates/spritelayout_templates.pnml"
#include "../templates/smoke_templates.pnml"

#define THIS_ID(...) cement_plant ## __VA_ARGS__

/* General ground sprite */
spriteset(THIS_ID(spriteset_ground), "sprites/graphics/industries/groundtiles.png") {
	tmpl_ground_tile(80, 10)
}

spriteset(THIS_ID(spriteset_clay), "sprites/graphics/industries/cementplant.png") { tmpl_ground_tile(80, 130) }
spriteset(THIS_ID(spriteset_stone), "sprites/graphics/industries/cementplant.png") { tmpl_ground_tile(150, 130) }

spriteset(THIS_ID(spriteset_1),  "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite( 80,  10, 113, -82) }
spriteset(THIS_ID(spriteset_2),  "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite(150,  10, 113, -82) }
spriteset(THIS_ID(spriteset_3),  "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite(220,  10, 113, -82) }
spriteset(THIS_ID(spriteset_4),  "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite(290,  10, 113, -82) }

spriteset(THIS_ID(spriteset_ground_spriteset_5), "sprites/graphics/industries/groundtiles.png") {
	tmpl_ground_tile(80, 10)
	/* DUPLICATED - NUMBER SPRITES NEEDS TO MATCH TO NUMBER OF ANIMATED FRAMES USED BY SPRITELAYOUT*/
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
}

spriteset(THIS_ID(spriteset_5_anim)) {
	tmpl_building_sprite_filename(220, 130, 113, -82, "sprites/graphics/industries/cementplant.png")
	tmpl_building_sprite_filename(290, 130, 113, -82, "sprites/graphics/industries/cementplant.png")
	tmpl_building_sprite_filename(360, 130, 113, -82, "sprites/graphics/industries/cementplant.png")
	tmpl_building_sprite_filename(430, 130, 113, -82, "sprites/graphics/industries/cementplant.png")
	tmpl_building_sprite_filename(500, 130, 113, -82, "sprites/graphics/industries/cementplant.png")
	tmpl_building_sprite_filename(570, 130, 113, -82, "sprites/graphics/industries/cementplant.png")
	tmpl_building_sprite_filename(640, 130, 113, -82, "sprites/graphics/industries/cementplant.png")
}

spriteset(THIS_ID(spriteset_6),  "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite(430,  10, 113, -82) }
spriteset(THIS_ID(spriteset_7),  "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite(500,  10, 113, -82) }
spriteset(THIS_ID(spriteset_8),  "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite(570,  10, 113, -82) }
spriteset(THIS_ID(spriteset_9),  "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite(640,  10, 113, -82) }
spriteset(THIS_ID(spriteset_10), "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite(710,  10, 113, -82) }
spriteset(THIS_ID(spriteset_11), "sprites/graphics/industries/cementplant.png") { tmpl_building_sprite(780,  10, 113, -82) }

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_clay_staithe), THIS_ID(spriteset_ground), THIS_ID(spriteset_clay), 8)

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_stone_staithe), THIS_ID(spriteset_ground), THIS_ID(spriteset_stone), 8)

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_1), THIS_ID(spriteset_ground), THIS_ID(spriteset_1), 48)

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_2), THIS_ID(spriteset_ground), THIS_ID(spriteset_2), 48)

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_3), THIS_ID(spriteset_ground), THIS_ID(spriteset_3), 48)

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_4), THIS_ID(spriteset_ground), THIS_ID(spriteset_4), 48)

spritelayout THIS_ID(spritelayout_5_anim) {
	ground {
		sprite: THIS_ID(spriteset_ground_spriteset_5);
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: THIS_ID(spriteset_5_anim(animation_frame));
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 48;
	}
	FENCE_NE
	FENCE_NW
	FENCE_SE
	FENCE_SW
}

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_6), THIS_ID(spriteset_ground), THIS_ID(spriteset_6), 48)

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_7), THIS_ID(spriteset_ground), THIS_ID(spriteset_7), 48)

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_8), GROUNDSPRITE_CONCRETE, THIS_ID(spriteset_8), 48)

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_9), THIS_ID(spriteset_ground), THIS_ID(spriteset_9), 48)

SPRITELAYOUT_FENCES_NORMAL(THIS_ID(spritelayout_10), THIS_ID(spriteset_ground), THIS_ID(spriteset_10), 48)

SPRITELAYOUT_FENCES_NORMAL_BEGIN(THIS_ID(spritelayout_11_anim), THIS_ID(spriteset_ground), THIS_ID(spriteset_11), 7)
	BUILDING_SMOKE_BIG(0, 0, 81)
	BUILDING_SMOKE_BIG(3, 0, 81)
SPRITELAYOUT_FENCES_END

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(0, 1): THIS_ID(spritelayout_2);
	relative_coord(0, 2): THIS_ID(spritelayout_3);
	relative_coord(1, 1): THIS_ID(spritelayout_1);
	relative_coord(1, 2): THIS_ID(spritelayout_6);
	relative_coord(2, 2): THIS_ID(spritelayout_5_anim);
	relative_coord(3, 2): THIS_ID(spritelayout_4);
	relative_coord(4, 0): THIS_ID(spritelayout_stone_staithe);
	relative_coord(4, 2): THIS_ID(spritelayout_8);
	relative_coord(4, 3): THIS_ID(spritelayout_7);
	relative_coord(5, 0): THIS_ID(spritelayout_clay_staithe);
	relative_coord(5, 1): THIS_ID(spritelayout_10);
	relative_coord(5, 2): THIS_ID(spritelayout_9);
	THIS_ID(spritelayout_11_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_2), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_2);
	relative_coord(0, 1): THIS_ID(spritelayout_3);
	relative_coord(0, 2): THIS_ID(spritelayout_1);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_6);
	relative_coord(2, 0): THIS_ID(spritelayout_5_anim);
	relative_coord(2, 1): THIS_ID(spritelayout_5_anim);
	relative_coord(2, 3): THIS_ID(spritelayout_8);
	relative_coord(2, 4): THIS_ID(spritelayout_7);
	relative_coord(3, 0): THIS_ID(spritelayout_4);
	relative_coord(3, 1): THIS_ID(spritelayout_4);
	relative_coord(3, 2): THIS_ID(spritelayout_10);
	relative_coord(3, 3): THIS_ID(spritelayout_9);
	relative_coord(3, 4): THIS_ID(spritelayout_stone_staithe);
	THIS_ID(spritelayout_11_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_3), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_2);
	relative_coord(0, 1): THIS_ID(spritelayout_3);
	relative_coord(0, 2): THIS_ID(spritelayout_6);
	relative_coord(0, 3): THIS_ID(spritelayout_6);
	relative_coord(0, 4): THIS_ID(spritelayout_stone_staithe);
	relative_coord(0, 5): THIS_ID(spritelayout_clay_staithe);
	relative_coord(1, 0): THIS_ID(spritelayout_2);
	relative_coord(1, 1): THIS_ID(spritelayout_3);
	relative_coord(1, 2): THIS_ID(spritelayout_5_anim);
	relative_coord(1, 3): THIS_ID(spritelayout_5_anim);
	relative_coord(1, 5): THIS_ID(spritelayout_8);
	relative_coord(1, 6): THIS_ID(spritelayout_7);
	relative_coord(2, 0): THIS_ID(spritelayout_1);
	relative_coord(2, 1): THIS_ID(spritelayout_1);
	relative_coord(2, 2): THIS_ID(spritelayout_4);
	relative_coord(2, 3): THIS_ID(spritelayout_4);
	relative_coord(2, 4): THIS_ID(spritelayout_10);
	relative_coord(2, 5): THIS_ID(spritelayout_9);
	THIS_ID(spritelayout_11_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_4), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_2);
	relative_coord(0, 1): THIS_ID(spritelayout_3);
	relative_coord(0, 2): THIS_ID(spritelayout_2);
	relative_coord(0, 3): THIS_ID(spritelayout_3);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_6);
	relative_coord(1, 2): THIS_ID(spritelayout_6);
	relative_coord(1, 3): THIS_ID(spritelayout_1);
	relative_coord(2, 0): THIS_ID(spritelayout_5_anim);
	relative_coord(2, 1): THIS_ID(spritelayout_5_anim);
	relative_coord(2, 2): THIS_ID(spritelayout_5_anim);
	relative_coord(3, 0): THIS_ID(spritelayout_4);
	relative_coord(3, 1): THIS_ID(spritelayout_4);
	relative_coord(3, 2): THIS_ID(spritelayout_4);
	relative_coord(4, 0): THIS_ID(spritelayout_stone_staithe);
	relative_coord(4, 2): THIS_ID(spritelayout_8);
	relative_coord(4, 3): THIS_ID(spritelayout_7);
	relative_coord(5, 0): THIS_ID(spritelayout_clay_staithe);
	relative_coord(5, 1): THIS_ID(spritelayout_10);
	relative_coord(5, 2): THIS_ID(spritelayout_9);
	THIS_ID(spritelayout_11_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_5), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_1);
	relative_coord(0, 1): THIS_ID(spritelayout_1);
	relative_coord(1, 0): THIS_ID(spritelayout_2);
	relative_coord(1, 1): THIS_ID(spritelayout_3);
	relative_coord(1, 2): THIS_ID(spritelayout_2);
	relative_coord(1, 3): THIS_ID(spritelayout_3);
	relative_coord(2, 0): THIS_ID(spritelayout_6);
	relative_coord(2, 1): THIS_ID(spritelayout_6);
	relative_coord(2, 2): THIS_ID(spritelayout_6);
	relative_coord(3, 0): THIS_ID(spritelayout_5_anim);
	relative_coord(3, 1): THIS_ID(spritelayout_5_anim);
	relative_coord(3, 2): THIS_ID(spritelayout_5_anim);
	relative_coord(4, 0): THIS_ID(spritelayout_4);
	relative_coord(4, 1): THIS_ID(spritelayout_4);
	relative_coord(4, 2): THIS_ID(spritelayout_stone_staithe);
	relative_coord(5, 1): THIS_ID(spritelayout_8);
	relative_coord(5, 2): THIS_ID(spritelayout_7);
	relative_coord(6, 0): THIS_ID(spritelayout_10);
	relative_coord(6, 1): THIS_ID(spritelayout_9);
	relative_coord(6, 2): THIS_ID(spritelayout_clay_staithe);
	THIS_ID(spritelayout_11_anim);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(layout), layout_num) {
	1: THIS_ID(layout_1);
	2: THIS_ID(layout_2);
	3: THIS_ID(layout_3);
	4: THIS_ID(layout_4);
	5: THIS_ID(layout_5);
	THIS_ID(spritelayout_1);
}

FENCES_EXCLUDE_BY_CLASS     ( THIS_ID(tile_fence_station),  THIS_ID(layout),              TILE_CLASS_STATION)
FENCES_EXCLUDE_SAME_INDUSTRY( THIS_ID(tile_fence_industry), THIS_ID(tile_fence_station))
ADD_FLAT_FENCES             (THIS_ID(tile_fences),          THIS_ID(tile_fence_industry), 1, 1, 1, 1)

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (player_check,                                                            THIS_ID(nearby_industry))
TILE_DISALLOW_SLOPES      (location_check,                       CB_RESULT_LOCATION_DISALLOW, THIS_ID(player_check))


/* tile */

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(tile1_anim_control), (extra_callback_info1 & 7)) {
	0: return 0;
	1: return 1;
	2: return 2;
	3: return 3;
	4: return 4;
	5: return 5;
	6: return 6;
	return 254;
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile), TILE_CEMENTPLANT_1) {
	property {
		substitute:         0;
		accepted_cargos:    [[COAL, 8], [CLAY, 8], [GRVL, 8]];
		land_shape_flags:   bitmask(LSF_ONLY_ON_FLAT_LAND);
		animation_info:     [ANIMATION_LOOPING, 7];
		animation_speed:    3;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}

	graphics {
		anim_control: THIS_ID(tile1_anim_control);
		tile_check:   THIS_ID(location_check);
		THIS_ID(tile_fences);
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_cement_plant_1 {
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	3, 2: THIS_ID(tile);
	4, 0: THIS_ID(tile);
	4, 1: THIS_ID(tile);
	4, 2: THIS_ID(tile);
	4, 3: THIS_ID(tile);
	5, 0: THIS_ID(tile);
	5, 1: THIS_ID(tile);
	5, 2: THIS_ID(tile);
}

tilelayout tilelayout_cement_plant_2 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	2, 4: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	3, 2: THIS_ID(tile);
	3, 3: THIS_ID(tile);
	3, 4: THIS_ID(tile);
}

tilelayout tilelayout_cement_plant_3 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	0, 4: THIS_ID(tile);
	0, 5: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	1, 4: THIS_ID(tile);
	1, 5: THIS_ID(tile);
	1, 6: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	2, 4: THIS_ID(tile);
	2, 5: THIS_ID(tile);
}

tilelayout tilelayout_cement_plant_4 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	3, 2: THIS_ID(tile);
	4, 0: THIS_ID(tile);
	4, 1: THIS_ID(tile);
	4, 2: THIS_ID(tile);
	4, 3: THIS_ID(tile);
	5, 0: THIS_ID(tile);
	5, 1: THIS_ID(tile);
	5, 2: THIS_ID(tile);
}

tilelayout tilelayout_cement_plant_5 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	4, 0: THIS_ID(tile);
	4, 1: THIS_ID(tile);
	4, 2: THIS_ID(tile);
	5, 0: THIS_ID(tile);
	5, 1: THIS_ID(tile);
	5, 2: THIS_ID(tile);
	6, 0: THIS_ID(tile);
	6, 1: THIS_ID(tile);
	6, 2: THIS_ID(tile);
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    2
#define THIS_PROD_RATIO_CARGO2    2
#define THIS_PROD_RATIO_CARGO3    4
#define THIS_BOOST_12             2
#define THIS_BOOST_13             2
#define THIS_BOOST_21             2
#define THIS_BOOST_23             2
#define THIS_BOOST_31             4
#define THIS_BOOST_32             4
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_CEMENT_PLANT
/* availability years - also update available from strings if changing these */

CHECK_INCOMPATIBLE  (cement_plant,  56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (coal_mine,     16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(cement_plant))
CHECK_INCOMPATIBLE  (quarry,        16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(coal_mine))
CHECK_INCOMPATIBLE  (clay_pit,      16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(quarry))
CHECK_FOUNDER       (THIS_ID(clay_pit))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, cement_plant, IND_CEMENTPLANT_ID) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_cement_plant_1,
				tilelayout_cement_plant_2,
				tilelayout_cement_plant_3,
				tilelayout_cement_plant_4,
				tilelayout_cement_plant_5
			];
		life_type:              IND_LIFE_TYPE_PROCESSING;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_CEMENT_PLANT);
		nearby_station_name:    string(STR_STATION, string(STR_TOWN), string(STR_IND_CEMENT_PLANT));
		prod_cargo_types: [BDMT];
		accept_cargo_types: [COAL, CLAY, GRVL];
		prod_multiplier: [0, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 203;
		map_colour: 19;
		remove_cost_multiplier: 0;
		spec_flags:             bitmask(IND_FLAG_MILITARY_HELICOPTER_CAN_EXPLODE);
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		construction_probability:THIS_ID(check_availability);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		extra_text_fund:         return string(STR_FUND_AVAILABLE_FROM, string(STR_FUND_AVAILABLE_FROM_DATE_CEMENT_PLANT));
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
