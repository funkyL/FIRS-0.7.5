/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) machine_shop ## __VA_ARGS__

spriteset(THIS_ID(spriteset_ground), "sprites/graphics/industries/groundtiles.png") {
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
}

spriteset(THIS_ID(spriteset_1)) {
	[10, 10, 64, 31, -31, 0, "sprites/graphics/industries/machineshop.png"]
	[10, 10, 64, 31, -31, 0, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_2)) {
	[80, 10, 64, 31, -31, 0, "sprites/graphics/industries/machineshop.png"]
	[80, 10, 64, 31, -31, 0, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_3)) {
	[150, 10, 64, 78, -25, -12, "sprites/graphics/industries/machineshop.png"]
	[150, 10, 64, 78, -25, -12, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_4)) {
	[220, 10, 64, 78, -48, -28, "sprites/graphics/industries/machineshop.png"]
	[220, 10, 64, 78, -48, -28, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_5)) {
	[290, 10, 64, 78, -31, -47, "sprites/graphics/industries/machineshop.png"]
	[290, 10, 64, 78, -31, -47, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_6)) {
	[360, 10, 64, 78, -31, -47, "sprites/graphics/industries/machineshop.png"]
	[360, 10, 64, 78, -31, -47, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_7)) {
	[430, 10, 64, 78, -31, -47, "sprites/graphics/industries/machineshop.png"]
	[430, 10, 64, 78, -31, -47, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_8)) {
	[500, 10, 64, 85, -31, -54, "sprites/graphics/industries/machineshop.png"]
	[500, 10, 64, 85, -31, -54, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_9)) {
	[570, 10, 64, 85, -31, -54, "sprites/graphics/industries/machineshop.png"]
	[570, 10, 64, 85, -31, -54, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_10)) {
	[640, 10, 64, 85, -31, -54, "sprites/graphics/industries/machineshop.png"]
	[640, 10, 64, 85, -31, -54, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_11)) {
	[780, 10, 64, 31, -35, 2, "sprites/graphics/industries/machineshop.png"]
	[780, 10, 64, 31, -35, 2, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_12)) {
	[850, 10, 64, 31, -35, 2, "sprites/graphics/industries/machineshop.png"]
	[850, 10, 64, 31, -35, 2, "sprites/graphics/industries/machineshop_snow.png"]
}

spriteset(THIS_ID(spriteset_13)) {
	[920, 10, 64, 49, -39, -15, "sprites/graphics/industries/machineshop.png"]
	[920, 10, 64, 49, -39, -15, "sprites/graphics/industries/machineshop_snow.png"]
}

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_1), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_1), 16)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_2), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_2), 16)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_3), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_3), 16)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_4), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_4), 16)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_5), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_5), 32)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_6), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_6), 32)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_7), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_7), 32)

SPRITELAYOUT_FENCES_NORMAL_SNOW_BEGIN(THIS_ID(spritelayout_8_anim), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_8), 7)
	BUILDING_DARK_SMOKE_SMALL(13, 0, 73)
SPRITELAYOUT_FENCES_END

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_9), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_9), 64)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_10), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_10), 64)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_11), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_11), 16)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_12), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_12), 16)

SPRITELAYOUT_FENCES_NORMAL_SNOW(THIS_ID(spritelayout_13), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_13), 32)

spritelayout THIS_ID(spritelayout_14) {
	ground {
		sprite: THIS_ID(spriteset_ground);
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(0, 1): THIS_ID(spritelayout_7);
	relative_coord(0, 2): THIS_ID(spritelayout_14);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_5);
	relative_coord(1, 2): THIS_ID(spritelayout_13);
	relative_coord(2, 1): THIS_ID(spritelayout_10);
	relative_coord(2, 2): THIS_ID(spritelayout_12);
	relative_coord(3, 0): THIS_ID(spritelayout_9);
	relative_coord(3, 1): THIS_ID(spritelayout_8_anim);
	relative_coord(3, 2): THIS_ID(spritelayout_11);
	relative_coord(4, 0): THIS_ID(spritelayout_3);
	relative_coord(4, 1): THIS_ID(spritelayout_4);
	relative_coord(4, 2): THIS_ID(spritelayout_13);
	relative_coord(5, 0): THIS_ID(spritelayout_2);
	relative_coord(5, 1): THIS_ID(spritelayout_1);
	THIS_ID(spritelayout_2);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_2), relative_pos) {
	relative_coord(0, 4): THIS_ID(spritelayout_12);
	relative_coord(0, 1): THIS_ID(spritelayout_7);
	relative_coord(0, 3): THIS_ID(spritelayout_7);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_5);
	relative_coord(1, 2): THIS_ID(spritelayout_6);
	relative_coord(1, 3): THIS_ID(spritelayout_5);
	relative_coord(1, 4): THIS_ID(spritelayout_11);
	relative_coord(2, 1): THIS_ID(spritelayout_10);
	relative_coord(2, 2): THIS_ID(spritelayout_14);
	relative_coord(2, 3): THIS_ID(spritelayout_3);
	relative_coord(2, 4): THIS_ID(spritelayout_4);
	relative_coord(3, 0): THIS_ID(spritelayout_9);
	relative_coord(3, 1): THIS_ID(spritelayout_8_anim);
	relative_coord(3, 2): THIS_ID(spritelayout_13);
	relative_coord(3, 3): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_3), relative_pos) {
	relative_coord(0, 1): THIS_ID(spritelayout_7);
	relative_coord(0, 3): THIS_ID(spritelayout_7);
	relative_coord(0, 4): THIS_ID(spritelayout_14);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_5);
	relative_coord(1, 2): THIS_ID(spritelayout_6);
	relative_coord(1, 3): THIS_ID(spritelayout_5);
	relative_coord(1, 4): THIS_ID(spritelayout_12);
	relative_coord(2, 0): THIS_ID(spritelayout_3);
	relative_coord(2, 1): THIS_ID(spritelayout_4);
	relative_coord(2, 3): THIS_ID(spritelayout_10);
	relative_coord(2, 4): THIS_ID(spritelayout_11);
	relative_coord(3, 0): THIS_ID(spritelayout_2);
	relative_coord(3, 2): THIS_ID(spritelayout_9);
	relative_coord(3, 3): THIS_ID(spritelayout_8_anim);
	relative_coord(3, 4): THIS_ID(spritelayout_13);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_4), relative_pos) {
	relative_coord(0, 1): THIS_ID(spritelayout_7);
	relative_coord(0, 2): THIS_ID(spritelayout_13);
	relative_coord(0, 3): THIS_ID(spritelayout_3);
	relative_coord(0, 4): THIS_ID(spritelayout_4);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_5);
	relative_coord(1, 2): THIS_ID(spritelayout_2);
	relative_coord(1, 3): THIS_ID(spritelayout_1);
	relative_coord(1, 4): THIS_ID(spritelayout_12);
	relative_coord(2, 1): THIS_ID(spritelayout_7);
	relative_coord(2, 3): THIS_ID(spritelayout_10);
	relative_coord(2, 4): THIS_ID(spritelayout_11);
	relative_coord(3, 0): THIS_ID(spritelayout_6);
	relative_coord(3, 1): THIS_ID(spritelayout_5);
	relative_coord(3, 2): THIS_ID(spritelayout_9);
	relative_coord(3, 3): THIS_ID(spritelayout_8_anim);
	relative_coord(3, 4): THIS_ID(spritelayout_13);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_5), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_3);
	relative_coord(0, 1): THIS_ID(spritelayout_4);
	relative_coord(0, 2): THIS_ID(spritelayout_1);
	relative_coord(0, 3): THIS_ID(spritelayout_7);
	relative_coord(0, 5): THIS_ID(spritelayout_10);
	relative_coord(1, 2): THIS_ID(spritelayout_6);
	relative_coord(1, 3): THIS_ID(spritelayout_5);
	relative_coord(1, 4): THIS_ID(spritelayout_9);
	relative_coord(1, 5): THIS_ID(spritelayout_8_anim);
	relative_coord(1, 0): THIS_ID(spritelayout_12);
	relative_coord(1, 1): THIS_ID(spritelayout_11);
	relative_coord(2, 0): THIS_ID(spritelayout_13);
	relative_coord(2, 1): THIS_ID(spritelayout_13);
	relative_coord(2, 2): THIS_ID(spritelayout_14);
	relative_coord(2, 3): THIS_ID(spritelayout_2);
	relative_coord(2, 4): THIS_ID(spritelayout_1);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(layout), layout_num) {
	1: THIS_ID(layout_1);
	2: THIS_ID(layout_2);
	3: THIS_ID(layout_3);
	4: THIS_ID(layout_4);
	5: THIS_ID(layout_5);
	THIS_ID(layout_1);
}

FENCES_EXCLUDE_BY_CLASS     ( THIS_ID(tile_fence_station),  THIS_ID(layout),             TILE_CLASS_STATION)
FENCES_EXCLUDE_SAME_INDUSTRY( THIS_ID(tile_fence_industry), THIS_ID(tile_fence_station))
ADD_FLAT_FENCES             ( THIS_ID(tile_fences),         THIS_ID(tile_fence_industry), 1, 1, 1, 1)

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile1_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile1_player_check,                                                            THIS_ID(tile1_nearby_industry))
TILE_DISALLOW_SLOPES      (tile1_location_check,                       CB_RESULT_LOCATION_DISALLOW, THIS_ID(tile1_player_check))

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(tile1_anim_control), (extra_callback_info1 & 14)) {
	0: return 0;
	1: return 2;
	2: return 4;
	3: return 6;
	4: return 8;
	5: return 10;
	6: return 12;
	7: return 14;
	8: return 16;
	9: return 18;
	10: return 20;
	11: return 22;
	12: return 24;
	return CB_RESULT_START_ANIMATION;
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile), TILE_MACHINESHOP_1) {
	property {
		substitute:         0;
		accepted_cargos:    [[STEL, 8], [PETR, 8]];
		land_shape_flags:   bitmask(LSF_ONLY_ON_FLAT_LAND);
		animation_info:     [ANIMATION_LOOPING, 47];
		animation_speed:    2;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}
	graphics {
		anim_control: THIS_ID(tile1_anim_control);
		tile_check:   THIS_ID(tile1_location_check);
		THIS_ID(tile_fences);
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_machine_shop_1 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	3, 2: THIS_ID(tile);
	4, 0: THIS_ID(tile);
	4, 1: THIS_ID(tile);
	4, 2: THIS_ID(tile);
	5, 0: THIS_ID(tile);
	5, 1: THIS_ID(tile);
	5, 2: THIS_ID(tile);
}

tilelayout tilelayout_machine_shop_2 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	0, 4: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	1, 4: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	2, 4: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	3, 2: THIS_ID(tile);
	3, 3: THIS_ID(tile);
	3, 4: THIS_ID(tile);
}

tilelayout tilelayout_machine_shop_3 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	0, 4: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	1, 4: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	2, 4: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	3, 2: THIS_ID(tile);
	3, 3: THIS_ID(tile);
	3, 4: THIS_ID(tile);
}

tilelayout tilelayout_machine_shop_4 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	0, 4: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	1, 4: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	2, 4: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	3, 2: THIS_ID(tile);
	3, 3: THIS_ID(tile);
	3, 4: THIS_ID(tile);
}

tilelayout tilelayout_machine_shop_5 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	0, 4: THIS_ID(tile);
	0, 5: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	1, 4: THIS_ID(tile);
	1, 5: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	2, 4: THIS_ID(tile);
	2, 5: THIS_ID(tile);
}


/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    2
#define THIS_PROD_RATIO_CARGO1    8
#define THIS_PROD_RATIO_CARGO2    8
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             0
#define THIS_BOOST_13             0
#define THIS_BOOST_21             0
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_MACHINE_SHOP
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY
/* availability years - also update available from strings if changing these */


CHECK_INCOMPATIBLE(machine_shop, 56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_FOUNDER     (THIS_ID(machine_shop))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, machine_shop, IND_MACHINESHOP_ID) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_machine_shop_1,
				tilelayout_machine_shop_2,
				tilelayout_machine_shop_3,
				tilelayout_machine_shop_4,tilelayout_machine_shop_5
			];
		life_type:              IND_LIFE_TYPE_PROCESSING;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_MACHINE_SHOP);
		nearby_station_name:    string(STR_STATION, string(STR_TOWN), string(STR_IND_MACHINE_SHOP));
		prod_cargo_types: [FMSP, ENSP];
		accept_cargo_types: [STEL, PETR];
		prod_multiplier: [0, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 145;
		map_colour: 48;
		remove_cost_multiplier: 0;
		spec_flags:             0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		construction_probability:THIS_ID(check_availability);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		extra_text_fund:         return string(STR_FUND_AVAILABLE_FROM, string(STR_FUND_AVAILABLE_FROM_DATE_MACHINE_SHOP));
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
