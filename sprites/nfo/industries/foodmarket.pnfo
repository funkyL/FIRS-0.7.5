//Industry tiles definition; Waste Collection Point has 1 tile

//Tile Action 0
-1 * 0 00 09 \b5 01 TILE_GENERALSTORE_1 // -1 * 0 00 09 <num-props> 01 <id>
	08 TILE_NULL //subsitute type
	0A CARGO_FOOD 08 //tile acceptance 1
	0B CARGO_FRUITSANDVEGETABLES 08 //tile acceptance 2
	0C CARGO_ALCOHOL 08 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land


// include tiles and layouts, ! Action 2 IDs here are deliberately repeated by the various tile includes
#define THIS_GRAPHICS_FILE foodmarket.png
#include "foodmarket_tiles_layouts/foodmarket_tiles_layouts.pnfo"

-1 * 0 02 09 A1
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b1 //number of ranges to check (number of layouts)
    \wxB1 \b1 \b1 //<set-id \w> <low-range> <high-range>
	\wx00 //<default> (first tile layout available)

#define THIS_GRAPHICS_FILE foodmarket.png
#include "foodmarket_tiles_layouts/foodmarket_tiles_layouts.pnfo"

-1 * 0 02 09 A2
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b1 //number of ranges to check (number of layouts)
    \wxB1 \b1 \b1 //<set-id \w> <low-range> <high-range>
	\wx00 //<default> (first tile layout available)

#define THIS_GRAPHICS_FILE foodmarket_snow.png
#include "foodmarket_tiles_layouts/foodmarket_tiles_layouts.pnfo"

-1 * 0 02 09 A3
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b1 //number of ranges to check (number of layouts)
    \wxB1 \b1 \b1 //<set-id \w> <low-range> <high-range>
	\wx00 //<default> (first tile layout available)


// check terrain type and branch to different layout checks appropriately
-1 * 0 02 09 A0 
	81 41 //check terrain type (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b2 //number of ranges to check (number of layouts)
	  \wxA2 \b1 \b1 //<set-id \w> <low-range> <high-range>  // desert
	  \wxA3 \b4 \b4 //<set-id \w> <low-range> <high-range>  // snow
	\wxA1 //<default>


//Tile Action 3
-1 * 0 03 09 01 TILE_GENERALSTORE_1 00 \wxA0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>

//Industry definition

//Action 0
-1 * 0 00 0A \b26 01 IND_GENERALSTORE //-1 * 0 00 0A <num-props> 01 <id>
	08 IND_NULL //reuse original industry with this here ID
	0A 01 //number of industry layouts
		\d7 //size of layout definition +2 for termination
		//layout:
			00 00 FE TILE_GENERALSTORE_1 00 //xoffs yoffs FE newtile(W)
		00 80 //terminate layout definition
	0B 00 //production flags 1h=extractive, 2h=organic, 4h=processing, 0h=no closure etc.
	0C STR_IND_CLOSE_GENERIC //industry closure message
	0D STR_IND_PRODINCR_GENERIC //production increase message
	0E STR_IND_PRODDECR_GENERIC //production decrease message
	1B STR_IND_NEW_GENERIC //new industry message
	1F STR_IND_GENERALSTORE //industry name
	10 FF FF //production cargo types (word; fill unused with FFh)
	11 CARGO_FOOD CARGO_FRUITSANDVEGETABLES CARGO_ALCOHOL FF //acceptance cargo types (dword; fill unused with FFh)
	12 00 //production multiplier cargo 1
	13 00 //production multiplier cargo 2
	1C \w0  \w0 //input cargo 1 multiplier (dword M1 M2; output_typen = X*Mn/256)
	1D \w0  \w0  //input cargo 2 multiplier
	1E \w0  \w0  //input cargo 3 multiplier
	14 \b2 //minimal cargo distribution amount
	16 IND_GENERALSTORE_CONFLICT FF FF //conflicting industry types (3*byte; ID+80h; FF to disable)
	17 \b24 //probability in random game
	18 \b12 //probability during gameplay
	20 FF FF FF BF //prospecting success chance (dword; FFFFFFFFh=100%)
	0F \b6 //fund cost multiplier (byte)
	19 CLR_GENERALSTORE //map colour (byte; using indexes from dos palette)
	23 \d0  //destruction cost multiplier (dword; default: 0)
	1A \dx10 //special industry flag (dword; in town: 10h)
	21 81 //callback flags 
	22 01  //callback flags
//To show cargo waiting to be processed at industry, ensure prop 21 is set to use production callback

//No action 1 for industries, as graphics are defined by the industry-tile feature.

//Dummy production callback to keep default-id happy
-1 * 0 02 0A 00 //-1 * 0 0A <set-id>
	00 //version
	\w9999 \w9999  \w0 //<subtract-in-1..3>
	\w0 \w0 //<add-out-1..2>
	00 //don't repeat

// handle cb 22 industry availability
#include "../../../templates/industry_availability_check.pnfo"
	
//Callback 38 display additional text in fund window
-1 * 0 02 0A C0 //-1 * 0 0A <set-id>
	85 0C //<type> <variable> word-access callback
	00 FF FF //no shift, no mask
	\b3 //number of ranges to check
    20 00                 22 00   22 00 //industry availability cb 22
    STR_INFO_GENERIC 80   38 00   38 00 //return text-ID D0xx if cb 38 (fund window)
    STR_INFO_GENERIC 80   3A 00   3A 00 //return text-ID D0xx if cb 3A (industry window)
	\w0 //default


//Industry action 3 attach varaction2 chain to industry
-1 * 0 03 0A 01 IND_GENERALSTORE 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>	

#undef THIS_INTRO_DATE