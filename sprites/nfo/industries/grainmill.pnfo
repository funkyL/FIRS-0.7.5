//BAKERY
// Defines for use in industry template
#define THIS_INDUSTRY                 IND_GRAINMILL
#define THIS_NUM_INPUT_CARGOS         \d02
#define THIS_NUM_OUTPUT_CARGOS        \d01
// manufacturing supplies should be in first slot for this to work correctly
#define THIS_PROD_RATIO_CARGO_IN_1    \d03
#define THIS_PROD_RATIO_CARGO_IN_2_3  \d05
#define THIS_STR_INFO_CB3A            STR_INFO_MS_GRAIN_INCREASE
#define THIS_STR_INFO_CB38            STR_INFO_AVAILABILITY
#define THIS_INTRO_DATE               \d00
#define THIS_HANDLE_CB28              10 00

//Industry tiles definition

//Tile action 0
-1 * 0 00 09 \b8 01 TILE_GRAINMILL_1 // -1 * 0 00 09 <num-props> 01 <id>
	08 TILE_NULL //subsitute type
	0A CARGO_GRAIN 08 //tile acceptance 1
	0B CARGO_MANUFACTURINGSUPPLIES 08 //tile acceptance 2
	0C 00 00 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land
	0E 10 //callback flags
  0F \b5 01 //animation: number frames | loop (01) / not loop (00)
	10 03 //animation speed

// include tiles and layouts, ! Action 2 IDs here are deliberately repeated by the various tile includes
#define THIS_GRAPHICS_FILE grainmill.png
#include "grainmill_tiles_layouts/grainmill_tiles_layouts.pnfo"

-1 * 0 02 09 A1
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b6 //number of ranges to check (number of layouts)
    \wxB1 \b1 \b1 //
    \wxB1 \b2 \b2 // layout 2 deprecated - uses layout 1
    \wxB3 \b3 \b3 //
    \wxB3 \b4 \b4 // layout 4 deprecated - uses layout 2
    \wxB5 \b5 \b5 //
    \wxB6 \b6 \b6 //
	\wx00 //<default> (first tile layout available)

#define THIS_GRAPHICS_FILE grainmill.png
#include "grainmill_tiles_layouts/grainmill_tiles_layouts.pnfo"

-1 * 0 02 09 A2
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b6 //number of ranges to check (number of layouts)
    \wxB1 \b1 \b1 //
    \wxB1 \b2 \b2 // layout 2 deprecated - uses layout 1
    \wxB3 \b3 \b3 //
    \wxB3 \b4 \b4 // layout 4 deprecated - uses layout 2
    \wxB5 \b5 \b5 //
    \wxB6 \b6 \b6 //
	\wx00 //<default> (first tile layout available)

#define THIS_GRAPHICS_FILE grainmill_snow.png
#include "grainmill_tiles_layouts/grainmill_tiles_layouts.pnfo"

-1 * 0 02 09 A3
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b6 //number of ranges to check (number of layouts)
    \wxB1 \b1 \b1 //
    \wxB1 \b2 \b2 // layout 2 deprecated - uses layout 1
    \wxB3 \b3 \b3 //
    \wxB3 \b4 \b4 // layout 4 deprecated - uses layout 3
    \wxB5 \b5 \b5 //
    \wxB6 \b6 \b6 //
	\wx00 //<default> (first tile layout available)


// check terrain type and branch to different layout checks appropriately
-1 * 0 02 09 A0 
	81 41 //check terrain type (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b2 //number of ranges to check (number of layouts)
	  \wxA2 \b1 \b1 //  // desert
	  \wxA3 \b4 \b4 //  // snow
	\wxA1 //<default>

//handle cb2f (tile shape check)
#include "../../../templates/cb2f_generic.pnfo"     

//Action3 attach sprites to industry tile

//Tile action 3
-1 * 0 03 09 01 TILE_GRAINMILL_1 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>



//Industry definition

//Action 0
-1 * 0 00 0A \b26 01 IND_GRAINMILL //-1 * 0 00 0A <num-props> 01 <id>
	08 IND_NULL //reuse original industry with this here ID
	0A 06 //number of industry layouts
		\d157 //sum(size of layout definition +2 for termination)
		//layout:
			00 00 FE TILE_GRAINMILL_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_GRAINMILL_1 00
			01 00 FE TILE_GRAINMILL_1 00
			01 01 FE TILE_GRAINMILL_1 00
		00 80 //terminate layout definition
		//layout:
			00 00 FE TILE_GRAINMILL_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_GRAINMILL_1 00
			01 00 FE TILE_GRAINMILL_1 00
			01 01 FE TILE_GRAINMILL_1 00
		00 80 //terminate layout definition
		//layout:
			00 00 FE TILE_GRAINMILL_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_GRAINMILL_1 00
			01 00 FE TILE_GRAINMILL_1 00
			01 01 FE TILE_GRAINMILL_1 00
			02 00 FE TILE_GRAINMILL_1 00
			02 01 FE TILE_GRAINMILL_1 00
		00 80 //terminate layout definition
		//layout:
			00 00 FE TILE_GRAINMILL_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_GRAINMILL_1 00
			01 00 FE TILE_GRAINMILL_1 00
			01 01 FE TILE_GRAINMILL_1 00
			02 00 FE TILE_GRAINMILL_1 00
			02 01 FE TILE_GRAINMILL_1 00
		00 80 //terminate layout definition
		//layout:
			00 00 FE TILE_GRAINMILL_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_GRAINMILL_1 00
			00 02 FE TILE_GRAINMILL_1 00
			00 03 FE TILE_GRAINMILL_1 00
			01 00 FE TILE_GRAINMILL_1 00
			01 01 FE TILE_GRAINMILL_1 00
			01 02 FE TILE_GRAINMILL_1 00
			01 03 FE TILE_GRAINMILL_1 00
		00 80 //terminate layout definition
		//layout:
			00 00 FE TILE_GRAINMILL_1 00 //xoffs yoffs FE newtile(W)
		00 80 //terminate layout definition
	0B 04 //production flags 1h=extractive, 2h=organic, 4h=processing
	0C STR_IND_CLOSE_GENERIC //industry closure message
	0D STR_IND_PRODINCR_GENERIC //production increase message
	0E STR_IND_PRODDECR_GENERIC //production decrease message
	1B STR_IND_NEW_GENERIC //new industry message
	1F STR_IND_GRAINMILL //industry name
	10 CARGO_FOOD FF //production cargo types (word; fill unused with FFh)
	11 CARGO_MANUFACTURINGSUPPLIES CARGO_GRAIN FF FF //acceptance cargo types (dword; fill unused with FFh)
	12 \b0 //production multiplier cargo 1
	13 \b0 //production multiplier cargo 2
	1C \w0 \w0  //input cargo 1 multiplier (dword M1 M2; output_typen = X*Mn/256)
	1D \w0 \w0  //input cargo 2 multiplier
	1E \w0 \w0  //input cargo 3 multiplier
	14 \b05 //minimal cargo distribution amount
	16 FF FF FF //conflicting industry types (3*byte; ID+40h; FF to disable)
	17 \b10 //probability in random game
	18 \b10 //probability during gameplay
	20 FF FF FF BF //prospecting success chance (dword; FFFFFFFFh=100%)
	0F \b44 //fund cost multiplier (byte)
	19 CLR_BAKERY //map colour (byte; using indexes from dos palette)
	23 \d0  //destruction cost multiplier (dword; default: 0)
	1A \dx00 //special industry flag (dword)
	21 3D //callback flags 
	22 01  //callback flags
//To show cargo waiting to be processed at industry, ensure prop 21 is set to use production callback

//No action 1 for industries, as graphics are defined by the industry-tile feature.

//Handle cb 28 industry location - included on a per-industry basis to allow industries to use various different schemes 
//generic cb28 stuff
#include "../../../templates/cb28_secondary_generic.pnfo"     

#define THIS_CONFLICTING_INDUSTRY IND_ARABLEFARM
#include "../../../templates/cb28_space_neighbours_in_chain.pnfo"
#undef THIS_CONFLICTING_INDUSTRY

#define THIS_CONFLICTING_INDUSTRY IND_BREWERY
#include "../../../templates/cb28_space_neighbours_in_chain.pnfo"
#undef THIS_CONFLICTING_INDUSTRY

#define THIS_DISTANCE_LIMIT_SQUARED  \w144
#include "../../../templates/cb28_near_town.pnfo"

#include "../../../templates/cb28_allow_player_build.pnfo"     

//cb28 stuff specific to this industry - checked before generic stuff
// !! this is experimental code to test restricting layouts with cb28.  Waiting on patch support, so doesn't do anything currently. 
-1 * 15	 02 0A 10  //check layout number
    81  86  00 \bxFF 
       01 //range
         01 84  \bxFF \bxFF //don't allow if layout n-z (zero indexed during cb 28)
       10 00 //default

#include "../../../templates/template_secondary_action23_C.pnfo"
