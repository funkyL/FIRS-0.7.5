// Defines for use in industry template
#define THIS_INDUSTRY                 IND_LUMBERYARD
#define THIS_NUM_INPUT_CARGOS         \d02
#define THIS_NUM_OUTPUT_CARGOS        \d02
#define THIS_PROD_RATIO_CARGO_IN_1    \d06
#define THIS_PROD_RATIO_CARGO_IN_2_3  \d02
#define THIS_STR_INFO_CB3A            STR_INFO_LUMBERYARD
#define THIS_STR_INFO_CB38            STR_INFO_AVAILABILITY
#define THIS_INTRO_DATE               \d00
#define THIS_HANDLE_CB28              10 00
#define THIS_COLOUR_SCHEMA            \b1

//Industry tiles definition

//Tile action 0
-1 * 0 00 09 \b6 01 TILE_LUMBERYARD_1 // -1 * 0 00 09 <num-props> 01 <id>
	08 TILE_NULL //subsitute type
	0A CARGO_LUMBER 08 //tile acceptance 1
	0B CARGO_CHEMICALS 08 //tile acceptance 2
	0C 00 00 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land
	0E 10 //callback flags

//Industry tile sprites; one sprite for each tile; eventually more for each tile to include  construction stages

//Tile action 1
-1 * 0 01 09 \b10 \b1 //-1 * 0 01 09 <num-sets> <num-ent>
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
// ground tile
-1 sprites/graphics/industries/groundtiles.png  10 10 09   31 64 -31   0
// creosote shed
-1 sprites/graphics/industries/lumberyard.pcx   80 10 09   64 64  -31  -40
-1 sprites/graphics/industries/lumberyard.pcx  150 10 09   64 64  -31  -34
// large shed
-1 sprites/graphics/industries/lumberyard.pcx  220 10 09   64 64  -31  -19
-1 sprites/graphics/industries/lumberyard.pcx  290 10 09   64 64  -31  -35
// office
-1 sprites/graphics/industries/lumberyard.pcx   10 10 09   64 64  -31  -26
// wood piles
-1 sprites/graphics/industries/lumberyard.pcx  150 90 09   31 64  -31  -4
-1 sprites/graphics/industries/lumberyard.pcx  220 90 09   31 64  -31  -4
-1 sprites/graphics/industries/lumberyard.pcx  290 90 09   31 64  -31  -4
// crane
-1 sprites/graphics/industries/lumberyard.pcx  360 10 09   64 64  -31  -24



//Tile action 2 
-1 * 0 02 09 00 00 //-1 * 0 02 09 <set-id> 00
// empty ground
	\d2022 //groundsprite
	\d0 //building sprite
	\b0 \b0 //xofs yofs
	\b0 \b0 \b0 //xextent yextent zextent
// creosote shed
-1 * 0 02 09 01 00 //-1 * 0 02 09 <set-id> 00
	\d2022 //groundsprite
	\dx80008001 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 02 00 //-1 * 0 02 09 <set-id> 00
	\d2022 //groundsprite
	\dx80008002 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
// large shed
-1 * 0 02 09 03 00 //-1 * 0 02 09 <set-id> 00
	\d2022 //groundsprite
	\dx80008003 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 04 00 //-1 * 0 02 09 <set-id> 00
	\d2022 //groundsprite
	\dx80008004 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
// office with crane
-1 * 0 02 09 05 00 //-1 * 0 02 09 <set-id> 00
	\d2022 //groundsprite
	\dx80008005 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
// wood piles
-1 * 0 02 09 06 00 //-1 * 0 02 09 <set-id> 00
	\d2022 //groundsprite
	\dx80008006 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 07 02 //-1 * 0 02 09 <set-id> 00 (extended format)
	\d2022 //groundsprite
	\dx80008009 //building sprite
	\b0 \b0 \b0 //xofs yofs zofs
	\b16 \b16 \b16 //xextent yextent zextent
	\dx80008007 //building sprite
	\b0 \b0 \b0 //xofs yofs zofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 08 00 //-1 * 0 02 09 <set-id> 00
	\d2022 //groundsprite
	\dx80008008 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent



//-1 * 0 02 09 <set-id> <type> <variable> <varadjust> <nvar> (<set-id> <low-range> <high-range>){n} <default>

-1 * 0 02 09 B1 //layout 1
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b12 //number of ranges to check (number of tiles) [range: XX YY  XX YY]
    \wx02   00 00  00 00
    \wx01   00 01  00 01
    \wx05   00 02  00 02
    \wx06   01 00  01 00
    \wx03   01 01  01 01
    \wx08   02 00  02 00
    \wx04   02 01  02 01
    \wx08   01 02  01 02
    \wx07   02 02  02 02
    \wx06   03 00  03 00
    \wx05   03 01  03 01
    \wx06   03 02  03 02
	\wx00 //(multiple) <default>

-1 * 0 02 09 B2 //layout 1
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b12 //number of ranges to check (number of tiles) [range: XX YY  XX YY]
    \wx02   00 00  00 00
    \wx01   00 01  00 01
    \wx05   00 02  00 02
    \wx06   00 03  00 03
    \wx08   01 00  01 00
    \wx08   01 01  01 01
    \wx03   01 02  01 02
    \wx06   01 03  01 03
    \wx05   02 00  02 00
    \wx06   02 01  02 01
    \wx04   02 02  02 02
    \wx07   02 03  02 03
	\wx00 //(multiple) <default>

-1 * 0 02 09 B3 //layout 1
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b10 //number of ranges to check (number of tiles) [range: XX YY  XX YY]
    \wx06   00 00  00 00
    \wx03   00 01  00 01
    \wx02   00 02  00 02
    \wx01   00 03  00 03
    \wx08   00 04  00 04
    \wx08   01 00  01 00
    \wx04   01 01  01 01
    \wx06   01 02  01 02
    \wx05   01 03  01 03
    \wx07   01 04  01 04
	\wx00 //(multiple) <default>

-1 * 0 02 09 B4 //layout 1
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b10 //number of ranges to check (number of tiles) [range: XX YY  XX YY]
    \wx03   00 00  00 00
    \wx07   00 01  00 01
    \wx04   01 00  01 00
    \wx06   01 01  01 01
    \wx02   02 00  02 00
    \wx01   02 01  02 01
    \wx08   03 00  03 00
    \wx06   03 01  03 01
    \wx05   04 00  04 00
    \wx06   04 01  04 01
	\wx00 //(multiple) <default>

-1 * 0 02 09 A0 
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b4 //number of ranges to check (number of layouts)
    \wxB1 \b1 \b1 //<set-id \w> <low-range> <high-range>
    \wxB2 \b2 \b2 //<set-id \w> <low-range> <high-range>
    \wxB3 \b3 \b3 //<set-id \w> <low-range> <high-range>
    \wxB4 \b4 \b4 //<set-id \w> <low-range> <high-range>
	\wx00 //<default> (first tile layout available)

//handle cb2f (tile shape check)
#include "../../../templates/cb2f_generic.pnfo"     

//Action3 attach sprites to industry tile

//Tile action 3
-1 * 0 03 09 01 TILE_LUMBERYARD_1 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>



//Industry definition

//Action 0
-1 * 0 00 0A \b26 01 IND_LUMBERYARD //-1 * 0 00 0A <num-props> 01 <id>
	08 IND_NULL //reuse original industry with this here ID
	0A 04 //number of industry layouts
		\d228 //sum(size of layout definition +2 for termination)
		//layout:
			00 00 FE TILE_LUMBERYARD_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_LUMBERYARD_1 00
			00 02 FE TILE_LUMBERYARD_1 00
			01 00 FE TILE_LUMBERYARD_1 00
			01 01 FE TILE_LUMBERYARD_1 00
			01 02 FE TILE_LUMBERYARD_1 00
			02 00 FE TILE_LUMBERYARD_1 00
			02 01 FE TILE_LUMBERYARD_1 00
			02 02 FE TILE_LUMBERYARD_1 00
			03 00 FE TILE_LUMBERYARD_1 00
			03 01 FE TILE_LUMBERYARD_1 00
			03 02 FE TILE_LUMBERYARD_1 00
		00 80 //terminate layout definition
		//layout:
			00 00 FE TILE_LUMBERYARD_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_LUMBERYARD_1 00
			00 02 FE TILE_LUMBERYARD_1 00
			00 03 FE TILE_LUMBERYARD_1 00
			01 00 FE TILE_LUMBERYARD_1 00
			01 01 FE TILE_LUMBERYARD_1 00
			01 02 FE TILE_LUMBERYARD_1 00
			01 03 FE TILE_LUMBERYARD_1 00
			02 00 FE TILE_LUMBERYARD_1 00
			02 01 FE TILE_LUMBERYARD_1 00
			02 02 FE TILE_LUMBERYARD_1 00
			02 03 FE TILE_LUMBERYARD_1 00
		00 80 //terminate layout definition
		//layout:
			00 00 FE TILE_LUMBERYARD_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_LUMBERYARD_1 00
			00 02 FE TILE_LUMBERYARD_1 00
			00 03 FE TILE_LUMBERYARD_1 00
			00 04 FE TILE_LUMBERYARD_1 00
			01 00 FE TILE_LUMBERYARD_1 00
			01 01 FE TILE_LUMBERYARD_1 00
			01 02 FE TILE_LUMBERYARD_1 00
			01 03 FE TILE_LUMBERYARD_1 00
			01 04 FE TILE_LUMBERYARD_1 00
		00 80 //terminate layout definition
		//layout:
			00 00 FE TILE_LUMBERYARD_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_LUMBERYARD_1 00
			01 00 FE TILE_LUMBERYARD_1 00
			01 01 FE TILE_LUMBERYARD_1 00
			02 00 FE TILE_LUMBERYARD_1 00
			02 01 FE TILE_LUMBERYARD_1 00
			03 00 FE TILE_LUMBERYARD_1 00
			03 01 FE TILE_LUMBERYARD_1 00
			04 00 FE TILE_LUMBERYARD_1 00
			04 01 FE TILE_LUMBERYARD_1 00
		00 80 //terminate layout definition
	0B 04 //production flags 1h=extractive, 2h=organic, 4h=processing
	0C STR_IND_CLOSE_GENERIC //industry closure message
	0D STR_IND_PRODINCR_GENERIC //production increase message
	0E STR_IND_PRODDECR_GENERIC //production decrease message
	1B STR_IND_NEW_GENERIC //new industry message
	1F STR_IND_LUMBERYARD //industry name
	10 CARGO_ENGINEERINGSUPPLIES CARGO_BUILDINGMATERIALS //production cargo types (word; fill unused with FFh)
	11 CARGO_LUMBER CARGO_CHEMICALS FF FF //acceptance cargo types (dword; fill unused with FFh)
	12 \b0 //production multiplier cargo 1
	13 \b0 //production multiplier cargo 2
	1C \w0 \w0 //input cargo 1 multiplier (dword M1 M2; output_typen = X*Mn/256)
	1D \w0 \w0 //input cargo 2 multiplier
	1E \w0 \w0 //input cargo 3 multiplier
	14 \b05 //minimal cargo distribution amount
	16 FF FF FF //conflicting industry types (3*byte; ID+80h; FF to disable)
	17 \b5 //probability in random game
	18 \b3 //probability during gameplay
	20 FF FF FF BF //prospecting success chance (dword; FFFFFFFFh=100%)
	0F \b35 //fund cost multiplier (byte)
	19 CLR_LUMBERYARD //map colour (byte; using indexes from dos palette)
	23 \d0  //destruction cost multiplier (dword; default: 0)
	1A \d0 //special industry flag (dword)
	21 3D //callback flags
	22 09  //callback flags
//To show cargo waiting to be processed at industry, ensure prop 21 is set to use production callback

//No action 1 for industries, as graphics are defined by the industry-tile feature.

// handle cb 28 industry location - included on a per-industry basis to allow industries to use various different schemes 
#include "../../../templates/cb28_secondary_generic.pnfo"     

#include "../../../templates/cb28_allow_player_build.pnfo"     


#include "../../../templates/template_secondary_action23_C.pnfo"
